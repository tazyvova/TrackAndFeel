services:
  db:
    image: postgis/postgis:16-3.4
    container_name: trackandfeel-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  backend:
    image: ghcr.io/tazyvova/trackandfeel-backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: trackandfeel-backend
    environment:
      PORT: "8080"
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8080"
    restart: unless-stopped

  frontend:
    image: ghcr.io/tazyvova/trackandfeel-frontend:latest
    build: { context: ./frontend, dockerfile: Dockerfile }
    # no public ports needed; Caddy will serve the files
    volumes:
      - frontend_dist:/usr/share/nginx/html
    depends_on:
      - backend
    restart: unless-stopped

  caddy:
    image: caddy:2
    container_name: trackandfeel-caddy
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    environment:
      DOMAIN: ${DOMAIN}
      ACME_EMAIL: ${ACME_EMAIL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      # Static files served directly by Caddy (optional optimization):
      - frontend_dist:/usr/share/nginx/html:ro
      # Certificates (persist)
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped

volumes:
  db_data:
  frontend_dist:
  caddy_data:
  caddy_config:
